{"ast":null,"code":"var _jsxFileName = \"/Users/justinlong/Documents/react/code-note2/frontend/src/components/Notes.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { getSelectedNote } from '../actions/noteActions';\n\nconst Notes = () => {\n  const notes = useSelector(state => state.notes.notes);\n  const dispatch = useDispatch();\n\n  const displayNote = event => {\n    event.persist();\n    dispatch(getSelectedNote(event.currentTarget.dataset.value, notes));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, notes.length > 0 ? notes.map(note => {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      onClick: displayNote,\n      \"data-value\": note._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: note.title,\n      style: {\n        color: '#fff'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 33\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"No notes\")));\n};\n\nexport default Notes;","map":{"version":3,"sources":["/Users/justinlong/Documents/react/code-note2/frontend/src/components/Notes.js"],"names":["React","useSelector","useDispatch","makeStyles","List","ListItem","ListItemText","getSelectedNote","Notes","notes","state","dispatch","displayNote","event","persist","currentTarget","dataset","value","length","map","note","_id","title","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,eAAT,QAAgC,wBAAhC;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAMC,KAAK,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,KAAN,CAAYA,KAAxB,CAAzB;AACA,QAAME,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,OAAN;AACAH,IAAAA,QAAQ,CAAEJ,eAAe,CAACM,KAAK,CAACE,aAAN,CAAoBC,OAApB,CAA4BC,KAA7B,EAAoCR,KAApC,CAAjB,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACS,MAAN,GAAe,CAAf,GACGT,KAAK,CAACU,GAAN,CAAWC,IAAD,IAAU;AAChB,wBACI,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,OAAO,EAAER,WAA1B;AAAuC,oBAAYQ,IAAI,CAACC,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AACI,MAAA,OAAO,EAAED,IAAI,CAACE,KADlB;AAEI,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQH,GATD,CADH,gBAYG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbR,CADJ,CADJ;AAoBH,CA7BD;;AA+BA,eAAef,KAAf","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { getSelectedNote } from '../actions/noteActions'\n\nconst Notes = () => {\n    const notes = useSelector((state) => state.notes.notes);\n    const dispatch = useDispatch();\n\n    const displayNote = (event) => {\n        event.persist()\n        dispatch((getSelectedNote(event.currentTarget.dataset.value, notes)))\n    };\n\n    return (\n        <div>\n            <List>\n                {notes.length > 0 ? (\n                    notes.map((note) => {\n                        return (\n                            <ListItem button onClick={displayNote} data-value={note._id}>\n                                <ListItemText\n                                    primary={note.title}\n                                    style={{ color: '#fff' }}\n                                />\n                            </ListItem>\n                        );\n                    })\n                ) : (\n                    <p>No notes</p>\n                )}\n            </List>\n        </div>\n    );\n};\n\nexport default Notes;\n"]},"metadata":{},"sourceType":"module"}