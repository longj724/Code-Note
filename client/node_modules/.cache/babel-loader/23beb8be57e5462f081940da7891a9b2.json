{"ast":null,"code":"import { CUR_FOLDER_NOTES, SELECTED_NOTE, CUR_EDITOR_JSON } from './types';\nimport axios from 'axios';\nexport const notesInFolder = folder => dispatch => {\n  axios.post('/notesInFolder', {\n    folder: folder\n  }).then(res => {\n    return res.data;\n  }).then(notes => {\n    const updatedNotes = allNotes.map(n => {\n      return { ...n,\n        selected: false\n      };\n    });\n    console.log(updatedNotes);\n    dispatch({\n      type: CUR_FOLDER_NOTES,\n      payload: updatedNotes\n    });\n  });\n};\nexport const getSelectedNote = (id, notes) => dispatch => {\n  const selectedNote = notes.find(note => note._id === id);\n  dispatch({\n    type: SELECTED_NOTE,\n    payload: selectedNote\n  });\n};\nexport const setCurEditorValue = value => dispatch => {\n  dispatch({\n    type: CUR_EDITOR_JSON,\n    payload: value\n  });\n};","map":{"version":3,"sources":["/Users/justinlong/Documents/react/code-note2/frontend/src/actions/noteActions.js"],"names":["CUR_FOLDER_NOTES","SELECTED_NOTE","CUR_EDITOR_JSON","axios","notesInFolder","folder","dispatch","post","then","res","data","notes","updatedNotes","allNotes","map","n","selected","console","log","type","payload","getSelectedNote","id","selectedNote","find","note","_id","setCurEditorValue","value"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,aAA3B,EAA0CC,eAA1C,QAAiE,SAAjE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAIC,MAAD,IAAaC,QAAD,IAAc;AACnDH,EAAAA,KAAK,CACAI,IADL,CACU,gBADV,EAC4B;AACpBF,IAAAA,MAAM,EAAEA;AADY,GAD5B,EAIKG,IAJL,CAIWC,GAAD,IAAS;AACX,WAAOA,GAAG,CAACC,IAAX;AACH,GANL,EAOKF,IAPL,CAOWG,KAAD,IAAW;AACb,UAAMC,YAAY,GAAGC,QAAQ,CAACC,GAAT,CAAcC,CAAD,IAAO;AACrC,aAAO,EAAC,GAAGA,CAAJ;AAAOC,QAAAA,QAAQ,EAAE;AAAjB,OAAP;AACH,KAFoB,CAArB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACAN,IAAAA,QAAQ,CAAC;AACLa,MAAAA,IAAI,EAAEnB,gBADD;AAELoB,MAAAA,OAAO,EAAER;AAFJ,KAAD,CAAR;AAIH,GAhBL;AAiBH,CAlBM;AAoBP,OAAO,MAAMS,eAAe,GAAG,CAACC,EAAD,EAAKX,KAAL,KAAgBL,QAAD,IAAc;AACxD,QAAMiB,YAAY,GAAGZ,KAAK,CAACa,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaJ,EAAlC,CAArB;AACAhB,EAAAA,QAAQ,CAAC;AAAEa,IAAAA,IAAI,EAAElB,aAAR;AAAuBmB,IAAAA,OAAO,EAAEG;AAAhC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMI,iBAAiB,GAAIC,KAAD,IAAYtB,QAAD,IAAc;AACtDA,EAAAA,QAAQ,CAAC;AAAEa,IAAAA,IAAI,EAAEjB,eAAR;AAAyBkB,IAAAA,OAAO,EAAEQ;AAAlC,GAAD,CAAR;AACH,CAFM","sourcesContent":["import { CUR_FOLDER_NOTES, SELECTED_NOTE, CUR_EDITOR_JSON } from './types';\nimport axios from 'axios';\n\nexport const notesInFolder = (folder) => (dispatch) => {\n    axios\n        .post('/notesInFolder', {\n            folder: folder,\n        })\n        .then((res) => {\n            return res.data;\n        })\n        .then((notes) => {\n            const updatedNotes = allNotes.map((n) => {\n                return {...n, selected: false}\n            })\n            console.log(updatedNotes)\n            dispatch({\n                type: CUR_FOLDER_NOTES,\n                payload: updatedNotes,\n            });\n        });\n};\n\nexport const getSelectedNote = (id, notes) => (dispatch) => {\n    const selectedNote = notes.find((note) => note._id === id);\n    dispatch({ type: SELECTED_NOTE, payload: selectedNote });\n};\n\nexport const setCurEditorValue = (value) => (dispatch) => {\n    dispatch({ type: CUR_EDITOR_JSON, payload: value });\n};\n"]},"metadata":{},"sourceType":"module"}