{"ast":null,"code":"var _jsxFileName = \"/Users/justinlong/Documents/react/code-note2/frontend/src/components/Folders.js\";\nimport React, { useState, useEffect } from 'react'; // Material-ui\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport IconButton from '@material-ui/core/IconButton';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { notesInFolder } from '../actions/noteActions';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  addFolder: {\n    color: '#fff',\n    fontSize: 50,\n    \"&:hover\": {\n      backgroundColor: '#bdbdbd'\n    },\n    borderRadius: '10px'\n  },\n  folderButton: {\n    backgroundColor\n  },\n  modal: {\n    position: 'absolute',\n    width: '20vw',\n    height: '20vh',\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 4, 3)\n  },\n  form: {\n    display: 'block'\n  }\n}));\n\nconst Folders = () => {\n  const classes = useStyles();\n  const [rendered, setRendered] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [modalStyle] = useState(getModalStyle);\n  const [folders, setFolders] = useState([]);\n  const [folderName, setfolderName] = useState('');\n  const notes = useSelector(state => state.notes);\n  const dispatch = useDispatch();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios.post('/addFolder', {\n      folder: folderName\n    });\n  };\n\n  const handleChange = event => {\n    setfolderName(event.target.value);\n  };\n\n  const getNotes = event => {\n    event.persist();\n    dispatch(notesInFolder(event.currentTarget.dataset.value));\n  };\n\n  useEffect(() => {\n    axios.get('/folders').then(res => {\n      return res.data;\n    }).then(res => {\n      setFolders(res.folders);\n    });\n  });\n  const modalBody = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Folder Name\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    style: {\n      marginTop: '0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, folders.map(folderName => {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      onClick: getNotes,\n      \"data-value\": folderName,\n      className: classes.folderButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FolderIcon, {\n      style: {\n        color: '#0166FF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 42\n        }\n      }, folderName),\n      value: folderName,\n      style: {\n        color: '#fff',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      style: {\n        color: '#0166FF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    })));\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n    className: classes.addFolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    display: \"inline\",\n    variant: \"button\",\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"Add Folder\")), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, modalBody));\n};\n\nexport default Folders;","map":{"version":3,"sources":["/Users/justinlong/Documents/react/code-note2/frontend/src/components/Folders.js"],"names":["React","useState","useEffect","makeStyles","List","ListItem","ListItemIcon","ListItemText","FolderIcon","IconButton","Modal","TextField","DeleteIcon","Typography","AddCircleIcon","axios","useSelector","useDispatch","notesInFolder","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","addFolder","color","fontSize","backgroundColor","borderRadius","folderButton","modal","position","width","height","palette","background","paper","padding","spacing","form","display","Folders","classes","rendered","setRendered","open","setOpen","modalStyle","folders","setFolders","folderName","setfolderName","notes","state","dispatch","handleOpen","handleClose","handleSubmit","event","preventDefault","post","folder","handleChange","target","value","getNotes","persist","currentTarget","dataset","get","then","res","data","modalBody","marginTop","map","fontWeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,SAASC,IAAT,GAAgB;AACZ,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,EAAxC;AACH;;AAED,SAASC,aAAT,GAAyB;AACrB,QAAMC,GAAG,GAAG,KAAKL,IAAI,EAArB;AACA,QAAMM,IAAI,GAAG,KAAKN,IAAI,EAAtB;AAEA,SAAO;AACHK,IAAAA,GAAG,EAAG,GAAEA,GAAI,GADT;AAEHC,IAAAA,IAAI,EAAG,GAAEA,IAAK,GAFX;AAGHC,IAAAA,SAAS,EAAG,cAAaF,GAAI,OAAMC,IAAK;AAHrC,GAAP;AAKH;;AAED,MAAME,SAAS,GAAGxB,UAAU,CAAEyB,KAAD,KAAY;AACrCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,KAAK,EAAE,MADA;AAEPC,IAAAA,QAAQ,EAAE,EAFH;AAGP,eAAW;AACPC,MAAAA,eAAe,EAAE;AADV,KAHJ;AAMPC,IAAAA,YAAY,EAAE;AANP,GAD0B;AASrCC,EAAAA,YAAY,EAAE;AACVF,IAAAA;AADU,GATuB;AAYrCG,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE,UADP;AAEHC,IAAAA,KAAK,EAAE,MAFJ;AAGHC,IAAAA,MAAM,EAAE,MAHL;AAIHN,IAAAA,eAAe,EAAEJ,KAAK,CAACW,OAAN,CAAcC,UAAd,CAAyBC,KAJvC;AAKHC,IAAAA,OAAO,EAAEd,KAAK,CAACe,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AALN,GAZ8B;AAmBrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE;AADP;AAnB+B,CAAZ,CAAD,CAA5B;;AAwBA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;AAEA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BhD,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACiD,IAAD,EAAOC,OAAP,IAAkBlD,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACmD,UAAD,IAAenD,QAAQ,CAACsB,aAAD,CAA7B;AACA,QAAM,CAAC8B,OAAD,EAAUC,UAAV,IAAwBrD,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsD,UAAD,EAAaC,aAAb,IAA8BvD,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMwD,KAAK,GAAGzC,WAAW,CAAE0C,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACA,QAAME,QAAQ,GAAG1C,WAAW,EAA5B;;AAEA,QAAM2C,UAAU,GAAG,MAAM;AACrBT,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAMU,WAAW,GAAG,MAAM;AACtBV,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMW,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACAjD,IAAAA,KAAK,CAACkD,IAAN,CAAW,YAAX,EAAyB;AACrBC,MAAAA,MAAM,EAAEX;AADa,KAAzB;AAGH,GALD;;AAOA,QAAMY,YAAY,GAAIJ,KAAD,IAAW;AAC5BP,IAAAA,aAAa,CAACO,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAb;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAIP,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACQ,OAAN;AACAZ,IAAAA,QAAQ,CAACzC,aAAa,CAAC6C,KAAK,CAACS,aAAN,CAAoBC,OAApB,CAA4BJ,KAA7B,CAAd,CAAR;AACH,GAHD;;AAKAnE,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,KAAK,CACA2D,GADL,CACS,UADT,EAEKC,IAFL,CAEWC,GAAD,IAAS;AACX,aAAOA,GAAG,CAACC,IAAX;AACH,KAJL,EAKKF,IALL,CAKWC,GAAD,IAAS;AACXtB,MAAAA,UAAU,CAACsB,GAAG,CAACvB,OAAL,CAAV;AACH,KAPL;AAQH,GATQ,CAAT;AAWA,QAAMyB,SAAS,gBACX;AAAK,IAAA,KAAK,EAAE1B,UAAZ;AAAwB,IAAA,SAAS,EAAEL,OAAO,CAACZ,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAE2B,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,gBADP;AAEI,IAAA,KAAK,EAAC,aAFV;AAGI,IAAA,OAAO,EAAC,UAHZ;AAII,IAAA,QAAQ,EAAEK,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAEpB,OAAO,CAACH,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CADJ,CADJ;AAgBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEmC,MAAAA,SAAS,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK1B,OAAO,CAAC2B,GAAR,CAAazB,UAAD,IAAgB;AACzB,wBACI,oBAAC,QAAD;AACI,MAAA,MAAM,MADV;AAEI,MAAA,OAAO,EAAEe,QAFb;AAGI,oBAAYf,UAHhB;AAII,MAAA,SAAS,EAAER,OAAO,CAACb,YAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,eASI,oBAAC,YAAD;AACI,MAAA,OAAO,eAAE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0ByB,UAA1B,CADb;AAEI,MAAA,KAAK,EAAEA,UAFX;AAGI,MAAA,KAAK,EAAE;AAAEzB,QAAAA,KAAK,EAAE,MAAT;AAAiBmD,QAAAA,UAAU,EAAE;AAA7B,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAcI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,KAAjB;AAAuB,oBAAW,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAEnD,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAdJ,CADJ;AAoBH,GArBA,CADL,eAuBI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE8B,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEb,OAAO,CAAClB,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAvBJ,eA0BI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,QAApB;AAA6B,IAAA,OAAO,EAAC,QAArC;AAA8C,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1BJ,CADJ,eA+BI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEoB,IAAb;AAAmB,IAAA,OAAO,EAAEW,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKiB,SADL,CA/BJ,CADJ;AAqCH,CApGD;;AAsGA,eAAehC,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Material-ui\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport IconButton from '@material-ui/core/IconButton';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\n\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { notesInFolder } from '../actions/noteActions';\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    addFolder: {\n        color: '#fff',\n        fontSize: 50,\n        \"&:hover\": {\n            backgroundColor: '#bdbdbd'\n        },\n        borderRadius: '10px'\n    },\n    folderButton: {\n        backgroundColor,\n    },\n    modal: {\n        position: 'absolute',\n        width: '20vw',\n        height: '20vh',\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(2, 4, 3),\n    },\n    form: {\n        display: 'block',\n    },\n}));\n\nconst Folders = () => {\n    const classes = useStyles();\n\n    const [rendered, setRendered] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [modalStyle] = useState(getModalStyle);\n    const [folders, setFolders] = useState([]);\n    const [folderName, setfolderName] = useState('');\n\n    const notes = useSelector((state) => state.notes);\n    const dispatch = useDispatch();\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        axios.post('/addFolder', {\n            folder: folderName,\n        });\n    };\n\n    const handleChange = (event) => {\n        setfolderName(event.target.value);\n    };\n\n    const getNotes = (event) => {\n        event.persist();\n        dispatch(notesInFolder(event.currentTarget.dataset.value));\n    };\n\n    useEffect(() => {\n        axios\n            .get('/folders')\n            .then((res) => {\n                return res.data;\n            })\n            .then((res) => {\n                setFolders(res.folders);\n            });\n    });\n\n    const modalBody = (\n        <div style={modalStyle} className={classes.modal}>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    id=\"outlined-basic\"\n                    label=\"Folder Name\"\n                    variant=\"outlined\"\n                    onChange={handleChange}\n                />\n                <button type=\"submit\" className={classes.form}>\n                    Submit\n                </button>\n            </form>\n        </div>\n    );\n\n    return (\n        <div>\n            <List style={{ marginTop: '0px' }}>\n                {folders.map((folderName) => {\n                    return (\n                        <ListItem\n                            button\n                            onClick={getNotes}\n                            data-value={folderName}\n                            className={classes.folderButton}\n                        >\n                            <ListItemIcon>\n                                <FolderIcon style={{ color: '#0166FF' }} />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={<Typography variant='h6'>{folderName}</Typography>}\n                                value={folderName}\n                                style={{ color: '#fff', fontWeight: 'bold' }}\n                            />\n                            <IconButton edge=\"end\" aria-label=\"delete\">\n                                <DeleteIcon style={{ color: '#0166FF' }} />\n                            </IconButton>\n                        </ListItem>\n                    );\n                })}\n                <IconButton onClick={handleOpen} >\n                    <AddCircleIcon className={classes.addFolder}/>\n                </IconButton>\n                <Typography display=\"inline\" variant=\"button\" style={{color: '#fff'}}>\n                    Add Folder\n                </Typography>\n            </List>\n            <Modal open={open} onClose={handleClose}>\n                {modalBody}\n            </Modal>\n        </div>\n    );\n};\n\nexport default Folders;\n"]},"metadata":{},"sourceType":"module"}