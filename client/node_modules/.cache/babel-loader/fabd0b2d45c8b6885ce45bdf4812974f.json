{"ast":null,"code":"var _jsxFileName = \"/Users/justinlong/Documents/react/code-note2/frontend/src/components/Folders.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  addNote: {\n    color: '#fff',\n    textAlign: 'center',\n    backgroundColor: 'red'\n  },\n  modal: {\n    position: 'absolute',\n    width: '20vw',\n    height: '20vh',\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 4, 3)\n  },\n  form: {\n    display: 'block'\n  }\n}));\n\nconst Folders = () => {\n  const classes = useStyles();\n  const [rendered, setRendered] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [folders, setFolders] = useState([]);\n  const [folderName, setfolderName] = useState('');\n  const [modalStyle] = useState(getModalStyle);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios.post('/addNote', {\n      folder: folderName\n    }).then(res => {\n      return res.data;\n    }).then(res => {\n      console.log(res.content);\n    });\n  };\n\n  const handleChange = event => {\n    setfolderName(event.target.value);\n  };\n\n  const getNotes = event => {\n    event.persist();\n    console.log(event.target);\n  };\n\n  useEffect(() => {\n    axios.get('/folders').then(res => {\n      return res.data;\n    }).then(res => {\n      setFolders(res.folders);\n    });\n  });\n  const modalBody = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Folder Name\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Add Note\",\n    className: classes.addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  })), folders.map(folderName => {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      onClick: getNotes,\n      value: folderName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: folderName,\n      value: folderName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, modalBody));\n};\n\nexport default Folders;","map":{"version":3,"sources":["/Users/justinlong/Documents/react/code-note2/frontend/src/components/Folders.js"],"names":["React","useState","useEffect","makeStyles","List","ListItem","ListItemIcon","ListItemText","FolderIcon","Modal","TextField","axios","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","addNote","color","textAlign","backgroundColor","modal","position","width","height","palette","background","paper","padding","spacing","form","display","Folders","classes","rendered","setRendered","open","setOpen","folders","setFolders","folderName","setfolderName","modalStyle","handleOpen","handleClose","handleSubmit","event","preventDefault","post","folder","then","res","data","console","log","content","handleChange","target","value","getNotes","persist","get","modalBody","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    addNote: {\n        color: '#fff',\n        textAlign: 'center',\n        backgroundColor: 'red',\n    },\n    modal: {\n        position: 'absolute',\n        width: '20vw',\n        height: '20vh',\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(2, 4, 3),\n    },\n    form: {\n        display: 'block',\n    },\n}));\n\nconst Folders = () => {\n    const classes = useStyles();\n\n    const [rendered, setRendered] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [folders, setFolders] = useState([]);\n    const [folderName, setfolderName] = useState('');\n    const [modalStyle] = useState(getModalStyle);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        axios\n            .post('/addNote', {\n                folder: folderName,\n            })\n            .then((res) => {\n                return res.data;\n            })\n            .then((res) => {\n                console.log(res.content);\n            });\n    };\n\n    const handleChange = (event) => {\n        setfolderName(event.target.value);\n    };\n\n    const getNotes = (event) => {\n        event.persist()\n        console.log(event.target)\n    }\n\n    useEffect(() => {\n        axios\n            .get('/folders')\n            .then((res) => {\n                return res.data;\n            })\n            .then((res) => {\n                setFolders(res.folders);\n            });\n    });\n\n    const modalBody = (\n        <div style={modalStyle} className={classes.modal}>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    id=\"outlined-basic\"\n                    label=\"Folder Name\"\n                    variant=\"outlined\"\n                    onChange={handleChange}\n                />\n                <button type=\"submit\" className={classes.form}>\n                    Submit\n                </button>\n            </form>\n        </div>\n    );\n\n    return (\n        <div>\n            <List>\n                <ListItem button onClick={handleOpen}>\n                    <ListItemText\n                        primary=\"Add Note\"\n                        className={classes.addNote}\n                    />\n                </ListItem>\n                {folders.map((folderName) => {\n                    return (\n                        <ListItem button onClick={getNotes} value={folderName}>\n                            <ListItemText primary={folderName} value={folderName}/>\n                        </ListItem>\n                    );\n                })}\n            </List>\n            <Modal open={open} onClose={handleClose}>\n                {modalBody}\n            </Modal>\n        </div>\n    );\n};\n\nexport default Folders;\n"]},"metadata":{},"sourceType":"module"}