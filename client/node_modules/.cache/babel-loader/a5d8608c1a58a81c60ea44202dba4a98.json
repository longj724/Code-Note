{"ast":null,"code":"var _jsxFileName = \"/Users/justinlong/Documents/react/code-note2/frontend/src/components/Folders.js\";\nimport React, { useState, useEffect } from 'react';\nimport classNames from 'classnames'; // Material-ui\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport IconButton from '@material-ui/core/IconButton';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { notesInFolder } from '../actions/noteActions';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  addFolder: {\n    color: '#fff',\n    fontSize: 50,\n    '&:hover': {\n      backgroundColor: '#bdbdbd'\n    },\n    borderRadius: '10px',\n    display: 'block'\n  },\n  folderButton: {\n    backgroundColor: 'primary'\n  },\n  folderBtnTextReg: {\n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  folderBtnTextSelected: {\n    color: '#fff',\n    '&:hover': {\n      borderBottom: '1px solid #fff'\n    },\n    fontWeight: 'bold'\n  },\n  deleteFolder: {\n    color: '#0166FF',\n    display: 'block',\n    fontSize: 40\n  },\n  modal: {\n    position: 'absolute',\n    width: '20vw',\n    height: '20vh',\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 4, 3)\n  },\n  form: {\n    display: 'block'\n  }\n}));\n\nconst Folders = () => {\n  const classes = useStyles();\n  const [rendered, setRendered] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [modalStyle] = useState(getModalStyle);\n  const [folders, setFolders] = useState([]);\n  const [folderName, setfolderName] = useState('');\n  const notes = useSelector(state => state.notes);\n  const dispatch = useDispatch();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios.post('/addFolder', {\n      folder: folderName\n    });\n  };\n\n  const handleChange = event => {\n    setfolderName(event.target.value);\n  };\n\n  const getNotes = event => {\n    event.persist();\n    const NewFolders = folders.map(folder => {\n      return folder.fo;\n    });\n    dispatch(notesInFolder(event.currentTarget.dataset.value));\n  };\n\n  useEffect(() => {\n    axios.get('/folders').then(res => {\n      return res.data;\n    }).then(res => {\n      console.log(res.folders);\n      const folderObject = res.folders.map(folder => {\n        return {\n          folder: folder,\n          selected: false\n        };\n      });\n      setFolders(folderObject);\n    });\n  }, []);\n  const modalBody = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Folder Name\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    style: {\n      marginTop: '0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, folders.map(folderObj => {\n    console.log(folderObj.selected);\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      onClick: getNotes,\n      \"data-value\": folderObj.folder,\n      className: classes.folderButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FolderIcon, {\n      style: {\n        color: '#0166FF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 37\n        }\n      }, folderObj.folder),\n      value: folderObj.folder,\n      className: folderObj.selected ? classes.folderBtnTextSelected : classes.folderBtnTextReg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n    className: classes.addFolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    display: \"inline\",\n    variant: \"button\",\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, \"Add Folder\"), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    className: classes.deleteFolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    display: \"inline\",\n    variant: \"button\",\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, \"Delete Folder\")), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, modalBody));\n};\n\nexport default Folders;","map":{"version":3,"sources":["/Users/justinlong/Documents/react/code-note2/frontend/src/components/Folders.js"],"names":["React","useState","useEffect","classNames","makeStyles","List","ListItem","ListItemIcon","ListItemText","FolderIcon","IconButton","Modal","TextField","DeleteIcon","Typography","AddCircleIcon","axios","useSelector","useDispatch","notesInFolder","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","addFolder","color","fontSize","backgroundColor","borderRadius","display","folderButton","folderBtnTextReg","fontWeight","folderBtnTextSelected","borderBottom","deleteFolder","modal","position","width","height","palette","background","paper","padding","spacing","form","Folders","classes","rendered","setRendered","open","setOpen","modalStyle","folders","setFolders","folderName","setfolderName","notes","state","dispatch","handleOpen","handleClose","handleSubmit","event","preventDefault","post","folder","handleChange","target","value","getNotes","persist","NewFolders","map","fo","currentTarget","dataset","get","then","res","data","console","log","folderObject","selected","modalBody","marginTop","folderObj"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\n// Material-ui\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport IconButton from '@material-ui/core/IconButton';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { notesInFolder } from '../actions/noteActions';\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    addFolder: {\n        color: '#fff',\n        fontSize: 50,\n        '&:hover': {\n            backgroundColor: '#bdbdbd',\n        },\n        borderRadius: '10px',\n        display: 'block',\n    },\n    folderButton: {\n        backgroundColor: 'primary',\n    },\n    folderBtnTextReg: {\n        color: '#fff',\n        fontWeight: 'bold',\n    },\n    folderBtnTextSelected: {\n        color: '#fff',\n        '&:hover': {\n            borderBottom: '1px solid #fff',\n        },\n        fontWeight: 'bold',\n    },\n    deleteFolder: {\n        color: '#0166FF',\n        display: 'block',\n        fontSize: 40,\n    },\n    modal: {\n        position: 'absolute',\n        width: '20vw',\n        height: '20vh',\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(2, 4, 3),\n    },\n    form: {\n        display: 'block',\n    },\n}));\n\nconst Folders = () => {\n    const classes = useStyles();\n\n    const [rendered, setRendered] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [modalStyle] = useState(getModalStyle);\n    const [folders, setFolders] = useState([]);\n    const [folderName, setfolderName] = useState('');\n\n    const notes = useSelector((state) => state.notes);\n    const dispatch = useDispatch();\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        axios.post('/addFolder', {\n            folder: folderName,\n        });\n    };\n\n    const handleChange = (event) => {\n        setfolderName(event.target.value);\n    };\n\n    const getNotes = (event) => {\n        event.persist();\n        const NewFolders = folders.map((folder) => {\n            return(folder.fo)\n        })\n        dispatch(notesInFolder(event.currentTarget.dataset.value));\n    };\n\n    useEffect(() => {\n        axios\n            .get('/folders')\n            .then((res) => {\n                return res.data;\n            })\n            .then((res) => {\n                console.log(res.folders);\n                const folderObject = res.folders.map((folder) => {\n                    return { folder: folder, selected: false };\n                });\n                setFolders(folderObject);\n            });\n    }, []);\n\n    const modalBody = (\n        <div style={modalStyle} className={classes.modal}>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    id=\"outlined-basic\"\n                    label=\"Folder Name\"\n                    variant=\"outlined\"\n                    onChange={handleChange}\n                />\n                <button type=\"submit\" className={classes.form}>\n                    Submit\n                </button>\n            </form>\n        </div>\n    );\n\n    return (\n        <div>\n            <List style={{ marginTop: '0px' }}>\n                {folders.map((folderObj) => {\n                    console.log(folderObj.selected);\n                    \n                    return (\n                        <ListItem\n                            button\n                            onClick={getNotes}\n                            data-value={folderObj.folder}\n                            className={classes.folderButton}\n                        >\n                            <ListItemIcon>\n                                <FolderIcon style={{ color: '#0166FF' }} />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant=\"h6\">\n                                        {folderObj.folder}\n                                    </Typography>\n                                }\n                                value={folderObj.folder}\n                                className={\n                                    folderObj.selected\n                                        ? classes.folderBtnTextSelected\n                                        : classes.folderBtnTextReg\n                                }\n                            />\n                        </ListItem>\n                    );\n                })}\n                <IconButton onClick={handleOpen}>\n                    <AddCircleIcon className={classes.addFolder} />\n                </IconButton>\n                <Typography\n                    display=\"inline\"\n                    variant=\"button\"\n                    style={{ color: '#fff' }}\n                >\n                    Add Folder\n                </Typography>\n                <IconButton edge=\"end\" aria-label=\"delete\">\n                    <DeleteIcon className={classes.deleteFolder} />\n                </IconButton>\n                <Typography\n                    display=\"inline\"\n                    variant=\"button\"\n                    style={{ color: '#fff' }}\n                >\n                    Delete Folder\n                </Typography>\n            </List>\n            <Modal open={open} onClose={handleClose}>\n                {modalBody}\n            </Modal>\n        </div>\n    );\n};\n\nexport default Folders;\n"]},"metadata":{},"sourceType":"module"}