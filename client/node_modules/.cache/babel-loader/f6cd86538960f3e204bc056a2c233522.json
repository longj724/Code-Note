{"ast":null,"code":"import { CUR_FOLDER_NOTES, SELECTED_NOTE } from './types';\nimport axios from 'axios';\nexport const notesInFolder = folder => dispatch => {\n  axios.post('/notesInFolder', {\n    folder: folder\n  }).then(res => {\n    return res.data;\n  }).then(notes => {\n    dispatch({\n      type: CUR_FOLDER_NOTES,\n      payload: notes\n    });\n  });\n};\nexport const getSelectedNote = (id, notes) => {\n  console.log('The notes are', notes);\n  const selectedNote = notes.find(note => note._id === id);\n  return {\n    type: SELECTED_NOTE,\n    payload: selectedNote\n  };\n};","map":{"version":3,"sources":["/Users/justinlong/Documents/react/code-note2/frontend/src/actions/noteActions.js"],"names":["CUR_FOLDER_NOTES","SELECTED_NOTE","axios","notesInFolder","folder","dispatch","post","then","res","data","notes","type","payload","getSelectedNote","id","console","log","selectedNote","find","note","_id"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,aAA3B,QAAgD,SAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAIC,MAAD,IAAaC,QAAD,IAAc;AACnDH,EAAAA,KAAK,CACAI,IADL,CACU,gBADV,EAC4B;AACpBF,IAAAA,MAAM,EAAEA;AADY,GAD5B,EAIKG,IAJL,CAIWC,GAAD,IAAS;AACX,WAAOA,GAAG,CAACC,IAAX;AACH,GANL,EAOKF,IAPL,CAOWG,KAAD,IAAW;AACbL,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEX,gBADD;AAELY,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GAZL;AAaH,CAdM;AAgBP,OAAO,MAAMG,eAAe,GAAG,CAACC,EAAD,EAAKJ,KAAL,KAAe;AAC1CK,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,KAA7B;AACA,QAAMO,YAAY,GAAGP,KAAK,CAACQ,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaN,EAAhC,CAArB;AACA,SAAO;AAAEH,IAAAA,IAAI,EAAEV,aAAR;AAAuBW,IAAAA,OAAO,EAAEK;AAAhC,GAAP;AACH,CAJM","sourcesContent":["import { CUR_FOLDER_NOTES, SELECTED_NOTE } from './types';\nimport axios from 'axios';\n\nexport const notesInFolder = (folder) => (dispatch) => {\n    axios\n        .post('/notesInFolder', {\n            folder: folder,\n        })\n        .then((res) => {\n            return res.data;\n        })\n        .then((notes) => {\n            dispatch({\n                type: CUR_FOLDER_NOTES,\n                payload: notes,\n            });\n        });\n};\n\nexport const getSelectedNote = (id, notes) => {\n    console.log('The notes are', notes)\n    const selectedNote = notes.find(note => note._id === id)\n    return { type: SELECTED_NOTE, payload: selectedNote };\n};\n"]},"metadata":{},"sourceType":"module"}