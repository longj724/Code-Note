{"ast":null,"code":"import _objectSpread from\"/Users/justinlong/Documents/react/code-note2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{CUR_FOLDER_NOTES,SELECTED_NOTE,CUR_EDITOR_JSON,SELECT_NOTE,DELETE_FOLDER,DELETE_NOTE,UPDATE_NOTES_IN_FOLDER}from'../actions/types';var initialState={notes:[],selectedNote:{},curEditorJSON:[{children:[{text:'Starter Text'}]}]};export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CUR_FOLDER_NOTES:return _objectSpread({},state,{notes:action.payload});case SELECTED_NOTE:return _objectSpread({},state,{selectedNote:action.payload});case CUR_EDITOR_JSON:return _objectSpread({},state,{curEditorJSON:action.payload});case SELECT_NOTE:return _objectSpread({},state,{notes:action.payload});case DELETE_FOLDER:return _objectSpread({},state,{notes:action.payload});case DELETE_NOTE:return _objectSpread({},state,{selectedNote:action.payload});case UPDATE_NOTES_IN_FOLDER:return _objectSpread({},state,{notes:action.payload});default:return state;}});","map":{"version":3,"sources":["/Users/justinlong/Documents/react/code-note2/frontend/src/reducers/noteReducer.js"],"names":["CUR_FOLDER_NOTES","SELECTED_NOTE","CUR_EDITOR_JSON","SELECT_NOTE","DELETE_FOLDER","DELETE_NOTE","UPDATE_NOTES_IN_FOLDER","initialState","notes","selectedNote","curEditorJSON","children","text","state","action","type","payload"],"mappings":"2KAAA,OACIA,gBADJ,CAEIC,aAFJ,CAGIC,eAHJ,CAIIC,WAJJ,CAKIC,aALJ,CAMIC,WANJ,CAOIC,sBAPJ,KAQO,kBARP,CAUA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,KAAK,CAAE,EADU,CAEjBC,YAAY,CAAE,EAFG,CAGjBC,aAAa,CAAE,CACX,CACIC,QAAQ,CAAE,CACN,CACIC,IAAI,CAAE,cADV,CADM,CADd,CADW,CAHE,CAArB,CAcA,eAAe,UAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBN,YAAyB,IAAXO,CAAAA,MAAW,2CAC7C,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKf,CAAAA,gBAAL,CACI,wBACOa,KADP,EAEIL,KAAK,CAAEM,MAAM,CAACE,OAFlB,GAIJ,IAAKf,CAAAA,aAAL,CACI,wBACOY,KADP,EAEIJ,YAAY,CAAEK,MAAM,CAACE,OAFzB,GAIJ,IAAKd,CAAAA,eAAL,CACI,wBACOW,KADP,EAEIH,aAAa,CAAEI,MAAM,CAACE,OAF1B,GAIJ,IAAKb,CAAAA,WAAL,CACI,wBACOU,KADP,EAEIL,KAAK,CAAEM,MAAM,CAACE,OAFlB,GAIJ,IAAKZ,CAAAA,aAAL,CACI,wBACOS,KADP,EAEIL,KAAK,CAAEM,MAAM,CAACE,OAFlB,GAIJ,IAAKX,CAAAA,WAAL,CACI,wBACOQ,KADP,EAEIJ,YAAY,CAAEK,MAAM,CAACE,OAFzB,GAIJ,IAAKV,CAAAA,sBAAL,CACI,wBACOO,KADP,EAEIL,KAAK,CAAEM,MAAM,CAACE,OAFlB,GAIJ,QACI,MAAOH,CAAAA,KAAP,CArCR,CAuCH,CAxCD","sourcesContent":["import {\n    CUR_FOLDER_NOTES,\n    SELECTED_NOTE,\n    CUR_EDITOR_JSON,\n    SELECT_NOTE,\n    DELETE_FOLDER,\n    DELETE_NOTE,\n    UPDATE_NOTES_IN_FOLDER\n} from '../actions/types';\n\nconst initialState = {\n    notes: [],\n    selectedNote: {},\n    curEditorJSON: [\n        {\n            children: [\n                {\n                    text: 'Starter Text',\n                },\n            ],\n        },\n    ],\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case CUR_FOLDER_NOTES:\n            return {\n                ...state,\n                notes: action.payload,\n            };\n        case SELECTED_NOTE:\n            return {\n                ...state,\n                selectedNote: action.payload,\n            };\n        case CUR_EDITOR_JSON:\n            return {\n                ...state,\n                curEditorJSON: action.payload,\n            };\n        case SELECT_NOTE:\n            return {\n                ...state,\n                notes: action.payload\n            }\n        case DELETE_FOLDER:\n            return {\n                ...state,\n                notes: action.payload\n            }\n        case DELETE_NOTE:\n            return {\n                ...state,\n                selectedNote: action.payload\n            }\n        case UPDATE_NOTES_IN_FOLDER: \n            return {\n                ...state,\n                notes: action.payload\n            }\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}