{"ast":null,"code":"import _objectSpread from\"/Users/justinlong/Documents/react/code-note2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/justinlong/Documents/react/code-note2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';// Material-ui\nimport List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemIcon from'@material-ui/core/ListItemIcon';import ListItemText from'@material-ui/core/ListItemText';import FolderIcon from'@material-ui/icons/Folder';import IconButton from'@material-ui/core/IconButton';import Button from'@material-ui/core/Button';import Modal from'@material-ui/core/Modal';import TextField from'@material-ui/core/TextField';import DeleteIcon from'@material-ui/icons/Delete';import Typography from'@material-ui/core/Typography';import AddCircleIcon from'@material-ui/icons/AddCircle';import useStyles from'../CSS/folderStyles';import axios from'axios';import{useSelector,useDispatch}from'react-redux';import{notesInFolder,deleteNotesInFolder}from'../actions/noteActions';function rand(){return Math.round(Math.random()*20)-10;}function getModalStyle(){var top=50+rand();var left=50+rand();return{top:\"\".concat(top,\"%\"),left:\"\".concat(left,\"%\"),transform:\"translate(-\".concat(top,\"%, -\").concat(left,\"%)\")};}var Folders=function Folders(){var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(getModalStyle),_useState4=_slicedToArray(_useState3,1),modalStyle=_useState4[0];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),folders=_useState6[0],setFolders=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),folderName=_useState8[0],setfolderName=_useState8[1];var notes=useSelector(function(state){return state.notes.notes;});var dispatch=useDispatch();var handleOpen=function handleOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};var handleSubmit=function handleSubmit(event){event.preventDefault();axios.post('/addFolder',{folder:folderName});setFolders(function(){folders.push({folder:folderName,selected:false});return folders;});};var handleChange=function handleChange(event){setfolderName(event.target.value);};var getNotes=function getNotes(event){event.persist();var value=event.currentTarget.dataset.value;var newFolders=folders.map(function(folder){return folder.folder===value?_objectSpread({},folder,{selected:true}):_objectSpread({},folder,{selected:false});});setFolders(newFolders);dispatch(notesInFolder(value));};var deleteFolder=function deleteFolder(){if(notes.length===0){window.alert('No folder selected');}else{window.alert('Are you sure you want to delete the selected folder?');axios.post('/deleteFolder',{folder:notes[0].folder});setFolders(function(){return folders.filter(function(val){return!(val.folder===notes[0].folder);});});dispatch(deleteNotesInFolder());}};useEffect(function(){axios.get('/folders').then(function(res){return res.data;}).then(function(res){if(!res.user){window.alert('Practice Environment, You are not logged in.');}var folderObject=res.folders.map(function(folder){return{folder:folder,selected:false};});setFolders(folderObject);});},[]);var modalBody=/*#__PURE__*/React.createElement(\"div\",{className:classes.addFolderModal},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit,className:classes.form},/*#__PURE__*/React.createElement(TextField,{id:\"outlined-basic\",label:\"Folder Name\",variant:\"outlined\",onChange:handleChange,className:classes.modalInput}),/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"contained\",className:classes.addFolderSubmit,disableElevation:true},\"Submit\")));return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(List,{style:{marginTop:'0px'}},folders.map(function(folderObj){return/*#__PURE__*/React.createElement(ListItem,{button:true,onClick:getNotes,\"data-value\":folderObj.folder,className:classes.folderButton,key:folderObj.folder},/*#__PURE__*/React.createElement(ListItemIcon,null,/*#__PURE__*/React.createElement(FolderIcon,{style:{color:'#0166FF'}})),/*#__PURE__*/React.createElement(ListItemText,{primary:/*#__PURE__*/React.createElement(Typography,{variant:\"h6\"},folderObj.folder),value:folderObj.folder,className:folderObj.selected?classes.folderBtnTextSelected:classes.folderBtnTextReg}));}),/*#__PURE__*/React.createElement(IconButton,{onClick:handleOpen},/*#__PURE__*/React.createElement(AddCircleIcon,{className:classes.addFolder})),/*#__PURE__*/React.createElement(Typography,{display:\"inline\",variant:\"button\",style:{color:'#fff'}},\"Add Folder\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(IconButton,{edge:\"end\",onClick:deleteFolder},/*#__PURE__*/React.createElement(DeleteIcon,{className:classes.deleteFolder})),/*#__PURE__*/React.createElement(Typography,{display:\"inline\",variant:\"button\",style:{color:'#fff',marginLeft:'19px'}},\"Delete Folder\")),/*#__PURE__*/React.createElement(Modal,{open:open,onClose:handleClose},modalBody));};export default Folders;","map":{"version":3,"sources":["/Users/justinlong/Documents/react/code-note2/frontend/src/components/Folders.js"],"names":["React","useState","useEffect","List","ListItem","ListItemIcon","ListItemText","FolderIcon","IconButton","Button","Modal","TextField","DeleteIcon","Typography","AddCircleIcon","useStyles","axios","useSelector","useDispatch","notesInFolder","deleteNotesInFolder","rand","Math","round","random","getModalStyle","top","left","transform","Folders","classes","open","setOpen","modalStyle","folders","setFolders","folderName","setfolderName","notes","state","dispatch","handleOpen","handleClose","handleSubmit","event","preventDefault","post","folder","push","selected","handleChange","target","value","getNotes","persist","currentTarget","dataset","newFolders","map","deleteFolder","length","window","alert","filter","val","get","then","res","data","user","folderObject","modalBody","addFolderModal","form","modalInput","addFolderSubmit","marginTop","folderObj","folderButton","color","folderBtnTextSelected","folderBtnTextReg","addFolder","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Material-ui\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport useStyles from '../CSS/folderStyles';\n\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { notesInFolder, deleteNotesInFolder } from '../actions/noteActions';\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst Folders = () => {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n    const [modalStyle] = useState(getModalStyle);\n    const [folders, setFolders] = useState([]);\n    const [folderName, setfolderName] = useState('');\n\n    const notes = useSelector((state) => state.notes.notes);\n    const dispatch = useDispatch();\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        axios.post('/addFolder', {\n            folder: folderName,\n        });\n        setFolders(() => {\n            folders.push({ folder: folderName, selected: false });\n            return folders;\n        });\n    };\n\n    const handleChange = (event) => {\n        setfolderName(event.target.value);\n    };\n\n    const getNotes = (event) => {\n        event.persist();\n        const value = event.currentTarget.dataset.value;\n        const newFolders = folders.map((folder) =>\n            folder.folder === value\n                ? { ...folder, selected: true }\n                : { ...folder, selected: false }\n        );\n        setFolders(newFolders);\n        dispatch(notesInFolder(value));\n    };\n\n    const deleteFolder = () => {\n        if (notes.length === 0) {\n            window.alert('No folder selected');\n        } else {\n            window.alert(\n                'Are you sure you want to delete the selected folder?'\n            );\n            axios.post('/deleteFolder', { folder: notes[0].folder });\n            setFolders(() =>\n                folders.filter((val) => !(val.folder === notes[0].folder))\n            );\n            dispatch(deleteNotesInFolder());\n        }\n    };\n\n    useEffect(() => {\n        axios\n            .get('/folders')\n            .then((res) => {\n                return res.data;\n            })\n            .then((res) => {\n                if (!res.user) {\n                    window.alert(\n                        'Practice Environment, You are not logged in.'\n                    );\n                }\n                const folderObject = res.folders.map((folder) => {\n                    return { folder: folder, selected: false };\n                });\n                setFolders(folderObject);\n            });\n    }, []);\n\n    const modalBody = (\n        <div className={classes.addFolderModal}>\n            <form onSubmit={handleSubmit} className={classes.form}>\n                <TextField\n                    id=\"outlined-basic\"\n                    label=\"Folder Name\"\n                    variant=\"outlined\"\n                    onChange={handleChange}\n                    className={classes.modalInput}\n                />\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    className={classes.addFolderSubmit}\n                    disableElevation\n                >\n                    Submit\n                </Button>\n            </form>\n        </div>\n    );\n\n    return (\n        <div>\n            <List style={{ marginTop: '0px' }}>\n                {folders.map((folderObj) => {\n                    return (\n                        <ListItem\n                            button\n                            onClick={getNotes}\n                            data-value={folderObj.folder}\n                            className={classes.folderButton}\n                            key={folderObj.folder}\n                        >\n                            <ListItemIcon>\n                                <FolderIcon style={{ color: '#0166FF' }} />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant=\"h6\">\n                                        {folderObj.folder}\n                                    </Typography>\n                                }\n                                value={folderObj.folder}\n                                className={\n                                    folderObj.selected\n                                        ? classes.folderBtnTextSelected\n                                        : classes.folderBtnTextReg\n                                }\n                            />\n                        </ListItem>\n                    );\n                })}\n                <IconButton onClick={handleOpen}>\n                    <AddCircleIcon className={classes.addFolder} />\n                </IconButton>\n                <Typography\n                    display=\"inline\"\n                    variant=\"button\"\n                    style={{ color: '#fff' }}\n                >\n                    Add Folder\n                </Typography>\n                <br />\n                <IconButton edge=\"end\" onClick={deleteFolder}>\n                    <DeleteIcon className={classes.deleteFolder} />\n                </IconButton>\n                <Typography\n                    display=\"inline\"\n                    variant=\"button\"\n                    style={{ color: '#fff', marginLeft: '19px' }}\n                >\n                    Delete Folder\n                </Typography>\n            </List>\n            <Modal open={open} onClose={handleClose}>\n                {modalBody}\n            </Modal>\n        </div>\n    );\n};\n\nexport default Folders;\n"]},"metadata":{},"sourceType":"module"}