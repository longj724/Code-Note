{"ast":null,"code":"var _jsxFileName = \"/Users/justinlong/Documents/react/code-note2/frontend/src/components/TextEditor.js\";\nimport React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/javascript';\nimport 'brace/mode/python';\nimport 'brace/theme/monokai';\nimport isHotkey from 'is-hotkey';\nimport _ from 'lodash';\nimport axios from 'axios'; // Slate\n\nimport { Editable, withReact, Slate } from 'slate-react';\nimport { Editor, createEditor, Transforms } from 'slate'; // Material UI\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport FormatUnderlineIcon from '@material-ui/icons/FormatUnderlined';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport { useSelector } from 'react-redux';\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nconst TextEditor = () => {\n  const classes = useStyles();\n  const selectedNote = useSelector(state => state.notes.selectedNote);\n  console.log(selectedNote.content);\n  const [value, setValue] = useState(initialValue);\n  const [language, setLanguage] = useState('javascript');\n  const [open, setOpen] = useState(false);\n  const editor = useMemo(() => withReact(createEditor()), []);\n  const renderLeaf = useCallback(props => /*#__PURE__*/React.createElement(Leaf, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 47\n    }\n  })), []);\n  const renderElement = useCallback(props => /*#__PURE__*/React.createElement(Element, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 50\n    }\n  })), []);\n  useEffect(() => {\n    console.log('In useEffect');\n\n    if (!_.isEmpty(selectedNote)) {\n      setValue(JSON.parse(selectedNote.content));\n    }\n  }, [selectedNote]);\n\n  const handleChange = event => {\n    setLanguage(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const Element = props => {\n    const {\n      attributes,\n      children,\n      element\n    } = props;\n\n    switch (element.type) {\n      case 'code':\n        return /*#__PURE__*/React.createElement(AceElement, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 24\n          }\n        }));\n\n      default:\n        return /*#__PURE__*/React.createElement(\"p\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 24\n          }\n        }), children);\n    }\n  };\n\n  const AceElement = ({\n    attributes,\n    children,\n    element\n  }) => {\n    const onClick = () => {\n      Editor.insertNode(editor, {\n        children: [{\n          text: ''\n        }]\n      });\n    };\n\n    const onChange = newValue => {};\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      contentEditable: false,\n      style: {\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AceEditor, {\n      id: \"justin\",\n      height: \"250px\",\n      mode: element.language,\n      theme: \"monokai\",\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", Object.assign({}, attributes, {\n      style: {\n        marginLeft: '10px',\n        marginRight: '10px'\n      },\n      onClick: onClick,\n      contentEditable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }), children));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      minHeight: '50vh',\n      width: '50vw'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slate, {\n    editor: editor,\n    value: value,\n    onChange: newValue => setValue(newValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onMouseDown: event => {\n      event.preventDefault();\n      toggleMark(editor, 'bold');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormatBoldIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onMouseDown: event => {\n      event.preventDefault();\n      toggleMark(editor, 'underline');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormatUnderlineIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormatItalicIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: event => {\n      event.preventDefault();\n      toggleBlock(editor, 'code', language);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, \"Add Editor\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, \"Language\"), /*#__PURE__*/React.createElement(Select, {\n    value: language,\n    onChange: handleChange,\n    onClose: handleClose,\n    onOpen: handleOpen,\n    labelId: \"demo-controlled-open-select-label\",\n    id: \"demo-controlled-open-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"javascript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }, \"Javascript\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 33\n    }\n  }, \"HTML\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"python\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 33\n    }\n  }, \"Python\"))), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Editable, {\n    renderElement: renderElement,\n    renderLeaf: renderLeaf,\n    onKeyDown: event => {\n      if (isHotkey('mod+s', event)) {\n        event.preventDefault();\n        axios.post('/updateNote', {\n          id: selectedNote._id,\n          content: JSON.stringify(value)\n        }).then(res => {\n          console.log(res);\n        });\n      }\n    },\n    placeholder: \"Enter some text...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst toggleMark = (editor, format) => {\n  const isActive = isMarkActive(editor, format);\n\n  if (isActive) {\n    Editor.removeMark(editor, format);\n  } else {\n    Editor.addMark(editor, format, true);\n  }\n};\n\nconst toggleBlock = (editor, format, language) => {\n  const isActive = isBlockActive(editor, format);\n  Transforms.setNodes(editor, {\n    type: isActive ? 'default' : 'code',\n    language\n  });\n};\n\nconst isMarkActive = (editor, format) => {\n  const marks = Editor.marks(editor);\n  return marks ? marks[format] === true : false;\n};\n\nconst isBlockActive = (editor, format) => {\n  const [match] = Editor.nodes(editor, {\n    match: n => n.type === format\n  });\n  return !!match;\n};\n\nconst Leaf = ({\n  attributes,\n  children,\n  leaf\n}) => {\n  if (leaf.bold) {\n    children = /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 20\n      }\n    }, children);\n  }\n\n  if (leaf.italic) {\n    children = /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 20\n      }\n    }, children);\n  }\n\n  if (leaf.underline) {\n    children = /*#__PURE__*/React.createElement(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 20\n      }\n    }, children);\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", Object.assign({}, attributes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 12\n    }\n  }), children);\n};\n\nconst initialValue = [{\n  children: [{\n    text: 'Starter Text'\n  }]\n}];\nexport default TextEditor;","map":{"version":3,"sources":["/Users/justinlong/Documents/react/code-note2/frontend/src/components/TextEditor.js"],"names":["React","useState","useMemo","useCallback","useEffect","AceEditor","isHotkey","_","axios","Editable","withReact","Slate","Editor","createEditor","Transforms","makeStyles","AppBar","Toolbar","Button","IconButton","FormatBoldIcon","FormatItalicIcon","FormatUnderlineIcon","InputLabel","MenuItem","FormControl","Select","TextField","useSelector","useStyles","theme","menuButton","marginRight","spacing","formControl","margin","minWidth","TextEditor","classes","selectedNote","state","notes","console","log","content","value","setValue","initialValue","language","setLanguage","open","setOpen","editor","renderLeaf","props","renderElement","isEmpty","JSON","parse","handleChange","event","target","handleClose","handleOpen","Element","attributes","children","element","type","AceElement","onClick","insertNode","text","onChange","newValue","marginLeft","backgroundColor","minHeight","width","preventDefault","toggleMark","toggleBlock","post","id","_id","stringify","then","res","format","isActive","isMarkActive","removeMark","addMark","isBlockActive","setNodes","marks","match","nodes","n","Leaf","leaf","bold","italic","underline"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/javascript';\nimport 'brace/mode/python';\nimport 'brace/theme/monokai';\nimport isHotkey from 'is-hotkey';\nimport _ from 'lodash';\nimport axios from 'axios';\n\n// Slate\nimport { Editable, withReact, Slate } from 'slate-react';\nimport { Editor, createEditor, Transforms } from 'slate';\n\n// Material UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport FormatUnderlineIcon from '@material-ui/icons/FormatUnderlined';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\n\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst TextEditor = () => {\n    const classes = useStyles();\n    const selectedNote = useSelector((state) => state.notes.selectedNote);\n    console.log(selectedNote.content)\n\n    const [value, setValue] = useState(initialValue);\n\n    const [language, setLanguage] = useState('javascript');\n    const [open, setOpen] = useState(false);\n\n    const editor = useMemo(() => withReact(createEditor()), []);\n    const renderLeaf = useCallback((props) => <Leaf {...props} />, []);\n    const renderElement = useCallback((props) => <Element {...props} />, []);\n\n    useEffect(() => {\n        console.log('In useEffect')\n        if (!_.isEmpty(selectedNote)) {\n            setValue(JSON.parse(selectedNote.content));\n        }\n    }, [selectedNote]);\n\n    const handleChange = (event) => {\n        setLanguage(event.target.value);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const Element = (props) => {\n        const { attributes, children, element } = props;\n        switch (element.type) {\n            case 'code':\n                return <AceElement {...props} />;\n            default:\n                return <p {...attributes}>{children}</p>;\n        }\n    };\n\n    const AceElement = ({ attributes, children, element }) => {\n        const onClick = () => {\n            Editor.insertNode(editor, {\n                children: [{ text: '' }],\n            });\n        };\n\n        const onChange = (newValue) => {};\n\n        return (\n            <>\n                <div contentEditable={false} style={{ marginLeft: '10px' }}>\n                    <AceEditor\n                        id=\"justin\"\n                        height=\"250px\"\n                        mode={element.language}\n                        theme=\"monokai\"\n                        onChange={onChange}\n                    />\n                </div>\n                <p\n                    {...attributes}\n                    style={{ marginLeft: '10px', marginRight: '10px' }}\n                    onClick={onClick}\n                    contentEditable={false}\n                >\n                    {children}\n                </p>\n            </>\n        );\n    };\n\n    return (\n        <div\n            style={{\n                backgroundColor: 'white',\n                minHeight: '50vh',\n                width: '50vw',\n            }}\n        >\n            <Slate\n                editor={editor}\n                value={value}\n                onChange={(newValue) => setValue(newValue)}\n            >\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            className={classes.menuButton}\n                            color=\"inherit\"\n                            aria-label=\"menu\"\n                            onMouseDown={(event) => {\n                                event.preventDefault();\n                                toggleMark(editor, 'bold');\n                            }}\n                        >\n                            <FormatBoldIcon />\n                        </IconButton>\n                        <IconButton\n                            edge=\"start\"\n                            className={classes.menuButton}\n                            color=\"inherit\"\n                            aria-label=\"menu\"\n                            onMouseDown={(event) => {\n                                event.preventDefault();\n                                toggleMark(editor, 'underline');\n                            }}\n                        >\n                            <FormatUnderlineIcon />\n                        </IconButton>\n                        <IconButton\n                            edge=\"start\"\n                            className={classes.menuButton}\n                            color=\"inherit\"\n                            aria-label=\"menu\"\n                        >\n                            <FormatItalicIcon />\n                        </IconButton>\n                        <Button\n                            variant=\"contained\"\n                            onClick={(event) => {\n                                event.preventDefault();\n                                toggleBlock(editor, 'code', language);\n                            }}\n                        >\n                            Add Editor\n                        </Button>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel>Language</InputLabel>\n                            <Select\n                                value={language}\n                                onChange={handleChange}\n                                onClose={handleClose}\n                                onOpen={handleOpen}\n                                labelId=\"demo-controlled-open-select-label\"\n                                id=\"demo-controlled-open-select\"\n                            >\n                                <MenuItem value=\"javascript\">\n                                    Javascript\n                                </MenuItem>\n                                <MenuItem value=\"html\">HTML</MenuItem>\n                                <MenuItem value=\"python\">Python</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <TextField id=\"standard-basic\" label=\"Title\" />\n                    </Toolbar>\n                </AppBar>\n                <Editable\n                    renderElement={renderElement}\n                    renderLeaf={renderLeaf}\n                    onKeyDown={(event) => {\n                        if (isHotkey('mod+s', event)) {\n                            event.preventDefault();\n                            axios\n                                .post('/updateNote', {\n                                    id: selectedNote._id,\n                                    content: JSON.stringify(value),\n                                })\n                                .then((res) => {\n                                    console.log(res);\n                                });\n                        }\n                    }}\n                    placeholder=\"Enter some text...\"\n                />\n            </Slate>\n        </div>\n    );\n};\n\nconst toggleMark = (editor, format) => {\n    const isActive = isMarkActive(editor, format);\n\n    if (isActive) {\n        Editor.removeMark(editor, format);\n    } else {\n        Editor.addMark(editor, format, true);\n    }\n};\n\nconst toggleBlock = (editor, format, language) => {\n    const isActive = isBlockActive(editor, format);\n\n    Transforms.setNodes(editor, {\n        type: isActive ? 'default' : 'code',\n        language,\n    });\n};\n\nconst isMarkActive = (editor, format) => {\n    const marks = Editor.marks(editor);\n    return marks ? marks[format] === true : false;\n};\n\nconst isBlockActive = (editor, format) => {\n    const [match] = Editor.nodes(editor, {\n        match: (n) => n.type === format,\n    });\n\n    return !!match;\n};\n\nconst Leaf = ({ attributes, children, leaf }) => {\n    if (leaf.bold) {\n        children = <strong>{children}</strong>;\n    }\n\n    if (leaf.italic) {\n        children = <em>{children}</em>;\n    }\n\n    if (leaf.underline) {\n        children = <u>{children}</u>;\n    }\n\n    return <span {...attributes}>{children}</span>;\n};\n\nconst initialValue = [\n    {\n        children: [\n            {\n                text: 'Starter Text',\n            },\n        ],\n    },\n];\n\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}