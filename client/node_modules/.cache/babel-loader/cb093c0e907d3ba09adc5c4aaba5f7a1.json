{"ast":null,"code":"var _jsxFileName = \"/Users/justinlong/Documents/react/code-note2/frontend/src/components/Notes.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getSelectedNote, notesInFolder, selectNote, deleteSelectedNote } from '../actions/noteActions';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from '../CSS/noteStyles';\n\nconst Notes = () => {\n  const classes = useStyles();\n  const notes = useSelector(state => state.notes.notes);\n  const selectedNote = useSelector(state => state.notes.selectedNote);\n  const dispatch = useDispatch();\n\n  const displayNote = event => {\n    event.persist();\n    const value = event.currentTarget.dataset.value;\n    const updatedNotes = notes.map(note => note._id === value ? { ...note,\n      selected: true\n    } : { ...note,\n      selected: false\n    });\n    dispatch(selectNote(updatedNotes));\n    dispatch(getSelectedNote(value, notes));\n  };\n\n  const addNote = () => {\n    const folder = notes[0].folder;\n    axios.post('/addNote', {\n      folder: folder\n    }).then(res => {\n      console.log(res);\n    });\n    dispatch(notesInFolder(folder));\n  };\n\n  const deleteNote = () => {\n    if (_.isEmpty(selectedNote)) {\n      window.alert('No note selected');\n    } else {\n      window.alert('Are you sure you want to delete the selected note?');\n      axios.post('/deleteNote', {\n        id: selectedNote._id\n      }).then(res => {\n        console.log(res);\n      });\n      const updatedNotes = notes.fiter(note => !(note._id === selectNote._id));\n      dispatch(deleteSelectedNote());\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    className: classes.searchNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Search Notes\",\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(SearchIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 37\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  })), notes.length > 0 ? notes.map(note => {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      onClick: displayNote,\n      \"data-value\": note._id,\n      className: classes.note,\n      key: note._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: note.title,\n      className: note.selected ? classes.noteBtnTextSelected : classes.noteBtnTextReg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    display: \"block\",\n    className: classes.noNotes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"No Notes\"), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: addNote,\n    className: classes.addNoteButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n    className: classes.addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    display: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Add Note\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    className: classes.deleteFolderBtn,\n    onClick: deleteNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    className: classes.deleteFolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    display: \"inline\",\n    variant: \"button\",\n    style: {\n      color: '#000',\n      marginLeft: '19px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"Delete Note\")));\n};\n\nexport default Notes;","map":{"version":3,"sources":["/Users/justinlong/Documents/react/code-note2/frontend/src/components/Notes.js"],"names":["React","useSelector","useDispatch","getSelectedNote","notesInFolder","selectNote","deleteSelectedNote","axios","_","List","ListItem","ListItemText","TextField","InputAdornment","IconButton","SearchIcon","AddCircleIcon","DeleteIcon","Typography","useStyles","Notes","classes","notes","state","selectedNote","dispatch","displayNote","event","persist","value","currentTarget","dataset","updatedNotes","map","note","_id","selected","addNote","folder","post","then","res","console","log","deleteNote","isEmpty","window","alert","id","fiter","searchNote","startAdornment","length","title","noteBtnTextSelected","noteBtnTextReg","noNotes","addNoteButton","deleteFolderBtn","deleteFolder","color","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    getSelectedNote,\n    notesInFolder,\n    selectNote,\n    deleteSelectedNote\n} from '../actions/noteActions';\nimport axios from 'axios';\nimport _ from 'lodash'\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from '../CSS/noteStyles'\n\nconst Notes = () => {\n    const classes = useStyles();\n\n    const notes = useSelector((state) => state.notes.notes);\n    const selectedNote = useSelector((state) => state.notes.selectedNote);\n    const dispatch = useDispatch();\n\n    const displayNote = (event) => {\n        event.persist();\n        const value = event.currentTarget.dataset.value;\n        const updatedNotes = notes.map((note) =>\n            note._id === value\n                ? { ...note, selected: true }\n                : { ...note, selected: false }\n        );\n        dispatch(selectNote(updatedNotes));\n        dispatch(getSelectedNote(value, notes));\n    };\n\n    const addNote = () => {\n        const folder = notes[0].folder;\n        axios\n            .post('/addNote', {\n                folder: folder,\n            })\n            .then((res) => {\n                console.log(res);\n            });\n        dispatch(notesInFolder(folder));\n    };\n\n    const deleteNote = () => {\n        if (_.isEmpty(selectedNote)) {\n            window.alert('No note selected')\n        } else {\n            window.alert(\n                'Are you sure you want to delete the selected note?'\n            );\n            axios.post('/deleteNote', {\n                id: selectedNote._id\n            }).then((res) => {\n                console.log(res)\n            })\n\n            const updatedNotes = notes.fiter((note) => !(note._id === selectNote._id))\n            dispatch(deleteSelectedNote())\n        }\n    }\n\n    return (\n        <div>\n            <List>\n                <form\n                    noValidate\n                    autoComplete=\"off\"\n                    className={classes.searchNote}\n                >\n                    <TextField\n                        label=\"Search Notes\"\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                </form>\n                {notes.length > 0 ? (\n                    notes.map((note) => {\n                        return (\n                            <ListItem\n                                button\n                                onClick={displayNote}\n                                data-value={note._id}\n                                className={classes.note}\n                                key={note._id}\n                            >\n                                <ListItemText\n                                    primary={note.title}\n                                    className={\n                                        note.selected\n                                            ? classes.noteBtnTextSelected\n                                            : classes.noteBtnTextReg\n                                    }\n                                />\n                            </ListItem>\n                        );\n                    })\n                ) : (\n                    <Typography\n                        variant=\"body1\"\n                        display=\"block\"\n                        className={classes.noNotes}\n                    >\n                        No Notes\n                    </Typography>\n                )}\n                <IconButton onClick={addNote} className={classes.addNoteButton}>\n                    <AddCircleIcon className={classes.addNote} />\n                </IconButton>\n                <Typography variant=\"body1\" display=\"inline\">\n                    Add Note\n                </Typography>\n                <br />\n                <IconButton edge=\"end\" className={classes.deleteFolderBtn} onClick={deleteNote}>\n                    <DeleteIcon\n                        className={classes.deleteFolder}\n                    />\n                </IconButton>\n                <Typography\n                    display=\"inline\"\n                    variant=\"button\"\n                    style={{ color: '#000', marginLeft: '19px' }}\n                >\n                    Delete Note\n                </Typography>\n            </List>\n        </div>\n    );\n};\n\nexport default Notes;\n"]},"metadata":{},"sourceType":"module"}