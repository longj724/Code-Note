{"ast":null,"code":"var _jsxFileName = \"/Users/justinlong/Documents/react/code-note2/frontend/src/components/Notes.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getSelectedNote, notesInFolder } from '../actions/noteActions';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles(theme => ({\n  searchNote: {\n    textAlign: 'center',\n    marginBottom: '2vh'\n  },\n  addNote: {\n    fontSize: 50,\n    color: '#000',\n    textAlign: 'center',\n    backgroundColor: '#fff',\n    '&:hover': {\n      backgroundColor: '#bdbdbd'\n    },\n    borderRadius: '10px'\n  },\n  addNoteButton: {\n    color: '#000',\n    textAlign: 'center',\n    backgroundColor: '#fff',\n    '&:hover': {\n      backgroundColor: '#fff'\n    }\n  },\n  note: {\n    backgroundColor: '#fff',\n    '&:hover': {\n      backgroundColor: '#fff'\n    }\n  },\n  noteBtnTextReg: {\n    color: '#000',\n    '&:hover': {\n      borderBottom: '1px solid #000'\n    }\n  },\n  noteBtnTextSelected: {\n    color: '#000',\n    borderBottom: '1px solid #000'\n  },\n  noNotes: {\n    marginLeft: '1vw',\n    marginBottom: '2vh',\n    marginTop: '2vh'\n  }\n}));\n\nconst Notes = () => {\n  const classes = useStyles();\n  const notes = useSelector(state => state.notes.notes);\n  const dispatch = useDispatch();\n\n  const displayNote = event => {\n    event.persist();\n    const value = event.currentTarget.dataset.value;\n    const updatedNotes = notes.map(note => note._id === value ? { ...note,\n      selected: true\n    } : { ...note,\n      selected: false\n    });\n    dispatch();\n    dispatch(getSelectedNote(value, notes));\n  };\n\n  const addNote = () => {\n    const folder = notes[0].folder;\n    axios.post('/addNote', {\n      folder: folder\n    }).then(res => {\n      console.log(res);\n    });\n    dispatch(notesInFolder(folder));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    className: classes.searchNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Search Notes\",\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(SearchIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 37\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })), notes.length > 0 ? notes.map(note => {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      onClick: displayNote,\n      \"data-value\": note._id,\n      className: classes.note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: note.title,\n      className: note.selected ? classes.noteBtnTextSelected : classes.noteBtnTextReg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body-1\",\n    display: \"block\",\n    className: classes.noNotes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"No Notes\"), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: addNote,\n    className: classes.addNoteButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n    className: classes.addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body-1\",\n    display: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, \"Add Note\")));\n};\n\nexport default Notes;","map":{"version":3,"sources":["/Users/justinlong/Documents/react/code-note2/frontend/src/components/Notes.js"],"names":["React","useSelector","useDispatch","getSelectedNote","notesInFolder","axios","makeStyles","List","ListItem","ListItemText","TextField","InputAdornment","IconButton","SearchIcon","AddCircleIcon","Typography","useStyles","theme","searchNote","textAlign","marginBottom","addNote","fontSize","color","backgroundColor","borderRadius","addNoteButton","note","noteBtnTextReg","borderBottom","noteBtnTextSelected","noNotes","marginLeft","marginTop","Notes","classes","notes","state","dispatch","displayNote","event","persist","value","currentTarget","dataset","updatedNotes","map","_id","selected","folder","post","then","res","console","log","startAdornment","length","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getSelectedNote, notesInFolder } from '../actions/noteActions';\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    searchNote: {\n        textAlign: 'center',\n        marginBottom: '2vh',\n    },\n    addNote: {\n        fontSize: 50,\n        color: '#000',\n        textAlign: 'center',\n        backgroundColor: '#fff',\n        '&:hover': {\n            backgroundColor: '#bdbdbd',\n        },\n        borderRadius: '10px',\n    },\n    addNoteButton: {\n        color: '#000',\n        textAlign: 'center',\n        backgroundColor: '#fff',\n        '&:hover': {\n            backgroundColor: '#fff',\n        },\n    },\n    note: {\n        backgroundColor: '#fff',\n        '&:hover': {\n            backgroundColor: '#fff',\n        },\n    },\n    noteBtnTextReg: {\n        color: '#000',\n        '&:hover': {\n            borderBottom: '1px solid #000',\n        },\n    },\n    noteBtnTextSelected: {\n        color: '#000',\n        borderBottom: '1px solid #000',\n    },\n    noNotes: {\n        marginLeft: '1vw',\n        marginBottom: '2vh',\n        marginTop: '2vh',\n    },\n}));\n\nconst Notes = () => {\n    const classes = useStyles();\n\n    const notes = useSelector((state) => state.notes.notes);\n    const dispatch = useDispatch();\n\n    const displayNote = (event) => {\n        event.persist();\n        const value = event.currentTarget.dataset.value;\n        const updatedNotes = notes.map((note) =>\n            note._id === value\n                ? { ...note, selected: true }\n                : { ...note, selected: false }\n        );\n        dispatch()\n        dispatch(getSelectedNote(value, notes));\n    };\n\n    const addNote = () => {\n        const folder = notes[0].folder;\n        axios\n            .post('/addNote', {\n                folder: folder,\n            })\n            .then((res) => {\n                console.log(res);\n            });\n        dispatch(notesInFolder(folder));\n    };\n\n    return (\n        <div>\n            <List>\n                <form\n                    noValidate\n                    autoComplete=\"off\"\n                    className={classes.searchNote}\n                >\n                    <TextField\n                        label=\"Search Notes\"\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                </form>\n                {notes.length > 0 ? (\n                    notes.map((note) => {\n                        return (\n                            <ListItem\n                                button\n                                onClick={displayNote}\n                                data-value={note._id}\n                                className={classes.note}\n                            >\n                                <ListItemText\n                                    primary={note.title}\n                                    className={\n                                        note.selected\n                                            ? classes.noteBtnTextSelected\n                                            : classes.noteBtnTextReg\n                                    }\n                                />\n                            </ListItem>\n                        );\n                    })\n                ) : (\n                    <Typography\n                        variant=\"body-1\"\n                        display=\"block\"\n                        className={classes.noNotes}\n                    >\n                        No Notes\n                    </Typography>\n                )}\n                <IconButton onClick={addNote} className={classes.addNoteButton}>\n                    <AddCircleIcon className={classes.addNote} />\n                </IconButton>\n                <Typography variant=\"body-1\" display=\"inline\">\n                    Add Note\n                </Typography>\n            </List>\n        </div>\n    );\n};\n\nexport default Notes;\n"]},"metadata":{},"sourceType":"module"}