{"ast":null,"code":"var _jsxFileName = \"/Users/justinlong/Documents/react/code-note2/frontend/src/components/Notes.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getSelectedNote, notesInFolder } from '../actions/noteActions';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles(theme => ({\n  searchNote: {\n    textAlign: 'center'\n  },\n  addNote: {\n    color: '#000',\n    textAlign: 'center',\n    backgroundColor: '#fff'\n  },\n  noteButton: {\n    backgroundColor: '#fff',\n    '&:hover': {\n      backgroundColor: '#000'\n    }\n  },\n  note: {\n    color: '#000',\n    '&:hover': {\n      color: '#fff'\n    }\n  },\n  noNotes: {\n    marginLeft: '1vw',\n    marginBottom: '2vh',\n    marginTop: '2vh'\n  }\n}));\n\nconst Notes = () => {\n  const classes = useStyles();\n  const notes = useSelector(state => state.notes.notes);\n  const dispatch = useDispatch();\n\n  const displayNote = event => {\n    event.persist();\n    dispatch(getSelectedNote(event.currentTarget.dataset.value, notes));\n  };\n\n  const addNote = () => {\n    const folder = notes[0].folder;\n    axios.post('/addNote', {\n      folder: folder\n    }).then(res => {\n      console.log(res);\n    });\n    dispatch(notesInFolder(folder));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    className: classes.searchNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Search Notes\",\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(SearchIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 37\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })), notes.length > 0 ? notes.map(note => {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      onClick: displayNote,\n      \"data-value\": note._id,\n      className: classes.noteButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: note.title,\n      className: classes.note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body-1\",\n    display: \"block\",\n    className: classes.noNotes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"No Notes\"), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: addNote,\n    className: classes.addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n    style: {\n      fontSize: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body-1\",\n    display: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Add Note\")));\n};\n\nexport default Notes;","map":{"version":3,"sources":["/Users/justinlong/Documents/react/code-note2/frontend/src/components/Notes.js"],"names":["React","useSelector","useDispatch","getSelectedNote","notesInFolder","axios","makeStyles","List","ListItem","ListItemText","TextField","InputAdornment","IconButton","SearchIcon","AddCircleIcon","Typography","useStyles","theme","searchNote","textAlign","addNote","color","backgroundColor","noteButton","note","noNotes","marginLeft","marginBottom","marginTop","Notes","classes","notes","state","dispatch","displayNote","event","persist","currentTarget","dataset","value","folder","post","then","res","console","log","startAdornment","length","map","_id","title","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getSelectedNote, notesInFolder } from '../actions/noteActions';\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    searchNote: {\n        textAlign: 'center',\n    },\n    addNote: {\n        color: '#000',\n        textAlign: 'center',\n        backgroundColor: '#fff',\n    },\n    noteButton: {\n        backgroundColor: '#fff',\n        '&:hover': {\n            backgroundColor: '#000',\n        },\n    },\n    note: {\n        color: '#000',\n        '&:hover': {\n            color: '#fff'\n        }\n    },\n    noNotes: {\n        marginLeft: '1vw',\n        marginBottom: '2vh',\n        marginTop: '2vh',\n    },\n}));\n\nconst Notes = () => {\n    const classes = useStyles();\n\n    const notes = useSelector((state) => state.notes.notes);\n    const dispatch = useDispatch();\n\n    const displayNote = (event) => {\n        event.persist();\n        dispatch(getSelectedNote(event.currentTarget.dataset.value, notes));\n    };\n\n    const addNote = () => {\n        const folder = notes[0].folder;\n        axios\n            .post('/addNote', {\n                folder: folder,\n            })\n            .then((res) => {\n                console.log(res);\n            });\n        dispatch(notesInFolder(folder));\n    };\n\n    return (\n        <div>\n            <List>\n                <form\n                    noValidate\n                    autoComplete=\"off\"\n                    className={classes.searchNote}\n                >\n                    <TextField\n                        label=\"Search Notes\"\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                </form>\n                {notes.length > 0 ? (\n                    notes.map((note) => {\n                        return (\n                            <ListItem\n                                button\n                                onClick={displayNote}\n                                data-value={note._id}\n                                className={classes.noteButton}\n                            >\n                                <ListItemText\n                                    primary={note.title}\n                                    className={classes.note}\n                                />\n                            </ListItem>\n                        );\n                    })\n                ) : (\n                    <Typography\n                        variant=\"body-1\"\n                        display=\"block\"\n                        className={classes.noNotes}\n                    >\n                        No Notes\n                    </Typography>\n                )}\n                <IconButton onClick={addNote} className={classes.addNote}>\n                    <AddCircleIcon style={{ fontSize: 50 }} />\n                </IconButton>\n                <Typography variant=\"body-1\" display=\"inline\">\n                    Add Note\n                </Typography>\n            </List>\n        </div>\n    );\n};\n\nexport default Notes;\n"]},"metadata":{},"sourceType":"module"}